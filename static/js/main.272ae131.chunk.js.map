{"version":3,"sources":["SortingVisualizer/Rectangle.jsx","SortingVisualizer/InsertionSort.js","SortingVisualizer/BubbleSort.js","SortingVisualizer/QuickSortHoare.js","SortingVisualizer/QuickSortLomuto.js","SortingVisualizer/SortingVisualizer.jsx","SortingVisualizer/MergeSort.js","App.js","serviceWorker.js","index.js"],"names":["Rectangle","styleChild","position","backgroundColor","this","props","color","width","height","toString","top","styleParent","marginLeft","array_size","marginRight","className","style","value","React","Component","_swap_values","arr","i","j","tmp","quick_sort_hoare","start","end","animations","a","_unique_number","p","Math","floor","p_val","push","_quick_sort_partition","quick_sort_lomuto","_partition","BASE_COLOR","SortingVisualizer","state","array","speed","sorting","handleGeneration","setState","Container","fluid","Navbar","bg","expand","Brand","Button","id","variant","onClick","handleStop","Nav","disabled","handleInsertionSort","handleBubbleSort","handleQuickSortLomuto","handleQuickSortHoare","handleMergeSort","Row","Col","formatLabel","step","maxValue","minValue","onChange","handleArraySizeChange","background","map","number","idx","key","round","len","min","max","random","size","idx_arr","current_color","slice","forEach","c","current_array","resetColor","last_p","last_min_idx","last_j","length","min_val","min_idx","moving_val","get_animations_insertion_sort","k","status","setTimeout","changeColor","bind","swapValues","is_sorted","get_animations_bubble_sort","toswap","last_i","merge_sort","splice","_merge_lists","moveJ2I","highestTimeoutId","clearTimeout","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.272ae131.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default class Rectangle extends React.Component{\n    render() {\n        var styleChild = {\n            position : \"absolute\",\n            backgroundColor : this.props.color,\n            width : \"100%\",\n            height : this.props.height.toString()+\"%\",\n            top : (100-this.props.height).toString()+\"%\",\n            };\n\n        var styleParent = {\n            position: \"relative\",\n            width : this.props.width.toString()+\"%\",\n            height : \"100%\",\n            marginLeft: this.props.array_size<100 ? \"1px\" : \"0px\",\n            marginRight: this.props.array_size<100 ? \"1px\" : \"0px\"\n        };\n\n        return (\n            <div className=\"rectangle\" style={styleParent}>\n                <div style={styleChild}>\n                    {this.props.value}\n                </div>\n            </div>\n            \n        )\n    }\n}","export function get_animations_insertion_sort(arr){\n    var animations=[];\n    for (var i=0; i<arr.length; i++){\n        var fixed_val = arr[i];\n        var min_val = fixed_val;\n        var min_idx = i;        \n        for (var j=i+1; j<=arr.length; j++){\n\n            var moving_val = arr[j];\n            if (moving_val < min_val){\n                min_val = moving_val;\n                min_idx = j;\n                animations.push([i, min_idx, j, 0]);\n            } else {\n                animations.push([i, min_idx, j, 0]);\n            }\n        }\n\n        arr = _swap_values(arr, i , min_idx);\n        animations.push([i, min_idx, min_idx, 1]);\n    }\n    return animations;\n}\n\nfunction _swap_values(arr, i, j){\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n    return arr\n}","export function get_animations_bubble_sort(arr){\n    var animations=[];\n    for (var k=arr.length-1; k>=0; k--){\n        var is_sorted=true;\n        for (var i=0; i<k; i++){\n            if (arr[i]>arr[i+1]){\n                is_sorted=false;\n                _swap_values(arr, i, i+1);\n                animations.push([i,i+1,1])\n            } else {animations.push([i,i+1,0])}\n        }\n        if (is_sorted){break;}\n    }\n    return animations;\n}\n\nfunction _swap_values(arr, i, j){\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n    return arr\n}","export function quick_sort_hoare(arr, start, end, animations){\n    if (_unique_number(arr,start,end)){\n        return [arr, animations];\n    } else {\n        var p;\n        [arr, p] = _quick_sort_partition(arr, start, end, animations);\n        quick_sort_hoare(arr, start, p, animations);\n        quick_sort_hoare(arr, p+1, end, animations);\n        return [arr, animations];\n    }\n}\n\nfunction _quick_sort_partition(arr, start, end, animations){\n    var p = Math.floor((start+end)/2)\n    var p_val = arr[p];\n    var i = start;\n    var j = end;\n    while (true){\n        while (arr[i]<p_val){\n            animations.push([p, i, j, 0]);\n            i++;\n        }\n        while (arr[j]>p_val){\n            animations.push([p, i, j, 0]);\n            j--;\n        }\n        if (i>=j){\n            return [arr, j];\n        }\n\n        arr = _swap_values(arr,i,j);\n\n        //in case p was changed\n        if (p==j){p=i;} else if(p==i){p=j;}\n\n        animations.push([p, i, j, 1]);\n        i++;\n        j--;\n        \n    }\n}\n\nfunction _swap_values(arr, i, j){\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n    return arr\n}\n\nfunction _unique_number(arr, start, end){\n    if (start==end) {return true;}\n    else {\n        var a = arr[start]\n        for (var i=1;i<=end;i++){\n            if (arr[i]!=a){\n                return false;\n            }\n        }\n        return true;\n    }\n}","export function quick_sort_lomuto(arr, start, end, animations){\n    if (start<end){\n        var p;\n        [p, arr] = _partition(arr, start, end, animations);\n        arr = quick_sort_lomuto(arr, start, p-1, animations);\n        arr = quick_sort_lomuto(arr, p+1, end, animations);\n        return arr\n    } else {\n        return arr;\n    }\n}\n\nfunction _partition(arr, start, end, animations){\n    var p = end;\n    var p_val = arr[p];\n    var i = start;\n    for (var j=start; j<end; j++){\n        if (arr[j]<p_val){\n            arr = _swap_values(arr,i,j);\n            animations.push([p, i, j, 1]);\n            i++;\n        } else {\n            animations.push([p, i, j, 0]);\n        }\n    }\n    \n    if (arr[i]!=arr[end]){\n        arr = _swap_values(arr,i, end);\n        animations.push([p, i, end, 1]);\n    } else {\n        animations.push([p, i, end, 0]);\n    }\n    \n    return [i,arr];\n}\n\nfunction _swap_values(arr, i, j){\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n    return arr\n}","import React from 'react';\nimport Rectangle from './Rectangle.jsx';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport InputRange from 'react-input-range'\n\nimport {get_animations_insertion_sort} from './InsertionSort.js';\nimport {get_animations_bubble_sort} from './BubbleSort.js';\nimport {quick_sort_hoare} from './QuickSortHoare.js';\nimport {quick_sort_lomuto} from './QuickSortLomuto.js';\nimport {merge_sort} from './MergeSort.js';\n\nimport './SortingVisualizer.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-input-range/lib/css/index.css'\n\nconst ARRAY_MIN=5;\nconst ARRAY_MAX=100;\n\nconst MAX_SIZE_DISPLAY_NUM = 25;\n\nconst BASE_COLOR=\"turquoise\";\nconst WRONG_COLOR=\"red\";\nconst CORRECT_COLOR=\"green\";\nconst PIVOT_COLOR=\"orange\";\n\nexport default class SortingVisualizer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            array : [13, 75, 14, 23, 9, 32, 8, 66, 34, 93],\n            color : [],\n            speed : 0.011,\n            array_size : 10,\n            sorting : false\n        }\n      }\n    \n    componentDidMount() {\n        this.handleGeneration(this.state.array_size, ARRAY_MIN, ARRAY_MAX);\n        this.setState({array:[13, 75, 14, 23, 9, 32, 8, 66, 34, 93]})\n    }\n\n    render(){\n        return (\n        <Container fluid={true} className=\"fullSizeContainer\">\n            <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand>Sorting Visualizer</Navbar.Brand>\n            {this.state.sorting ? <Button id=\"stopButton\" variant=\"danger\" onClick={() => this.handleStop()}>Stop</Button> : null}\n\n            <Nav className=\"mx-auto\">\n                <Button className=\"mx-1 text-nowrap\" \n                        onClick={() => this.handleGeneration(this.state.array_size, ARRAY_MIN, ARRAY_MAX)}\n                        disabled={this.state.sorting}>Generate new array</Button>\n                <Button className=\"mx-1 text-nowrap\" \n                        onClick={() => this.handleInsertionSort()}\n                        disabled={this.state.sorting}>Insertion Sort</Button>\n                <Button className=\"mx-1 text-nowrap\" \n                        onClick={() => this.handleBubbleSort()}\n                        disabled={this.state.sorting}>Bubble Sort</Button>\n                <Button className=\"mx-1 text-nowrap\" \n                        onClick={() => this.handleQuickSortLomuto()}\n                        disabled={this.state.sorting}>Quick Sort (Lomuto)</Button>\n                <Button className=\"mx-1 text-nowrap\" \n                        onClick={() => this.handleQuickSortHoare()}\n                        disabled={this.state.sorting}>Quick Sort (Hoare)</Button>\n                <Button className=\"mx-1 text-nowrap\" \n                        onClick={() => this.handleMergeSort()}\n                        disabled={this.state.sorting}>Merge Sort</Button>\n\n            </Nav>\n            </Navbar>\n            <Container style={{width: '50vw', height: '10vh' }}>\n                <Row>\n                    <Col>Array Size\n                        <InputRange\n                        formatLabel={value => `${value}`}\n                        step={10}\n                        maxValue={200}\n                        minValue={10}\n                        value={this.state.array_size}\n                        disabled={this.state.sorting}\n                        onChange={(array_size) => {this.handleArraySizeChange(array_size);}} />\n                    </Col>\n                    <Col>Speed\n                        <InputRange\n                        formatLabel={value => `${value}`}\n                        step={1}\n                        maxValue={10}\n                        minValue={0}\n                        value={500*this.state.speed-0.5}\n                        disabled={this.state.sorting}\n                        onChange={value => this.setState({ speed : (2*value+1)/1000 })} />\n                    </Col>\n                </Row>\n                    \n                    \n                    \n            </Container>\n            <Container className=\"d-flex mx-auto\" style={{ background: '#9e9e9e', width: '80vw', height: '80vh' }}>\n                {this.state.array.map((number,idx) =>\n                        (<Rectangle key={idx} array_size={this.state.array_size} color={this.state.color[idx]} height={Math.round(100*number/ARRAY_MAX)} \n                        width={100/this.state.array_size} value={this.state.array_size<=MAX_SIZE_DISPLAY_NUM ? number : \"\"}></Rectangle>)\n                )}\n            </Container>                \n\n        </Container>\n            )\n    }\n    \n    handleGeneration(len, min, max) {\n        var array = [];\n        for (var i = 0; i<len; i++){\n            array.push(Math.round(ARRAY_MIN + (ARRAY_MAX-ARRAY_MIN)*Math.random()))\n        }\n        var color = array.map(number => BASE_COLOR);\n        this.setState({array: array, color: color});\n    }\n\n    handleArraySizeChange(size){\n        this.setState({ array_size:size });\n        this.handleGeneration(size, ARRAY_MIN, ARRAY_MAX);\n    }\n\n    changeColor(idx_arr, color){\n        var current_color = this.state.color.slice();\n        idx_arr.forEach(function(idx, c=0){current_color[idx] = color[c++]});\n        this.setState({color: current_color});\n    }\n\n    resetColor(){\n        var current_color = this.state.color.slice();\n        this.setState({color: current_color.map(c => BASE_COLOR)});\n    }\n\n    swapValues(i, j){\n        var current_array = this.state.array.slice();\n        var tmp = current_array[i];\n        current_array[i] = current_array[j];\n        current_array[j] = tmp;\n        this.setState({array: current_array});\n    }\n\n    handleInsertionSort(){\n        this.setState({sorting: true});\n        this.resetColor();\n\n        var current_array = this.state.array.slice();\n        var animations = get_animations_insertion_sort(current_array);\n        var last_p, last_min_idx, last_j;\n\n        for (var k = 0; k<animations.length; k++){\n            var [p, min_idx, j, status] = animations[k];\n\n            //If pivot changes\n            if (p!==last_p){\n                setTimeout(\n                    function (p, last_p){\n                        this.resetColor();\n                        this.changeColor([p, last_p], [PIVOT_COLOR, BASE_COLOR]);\n                    }.bind(this, p, last_p),\n                    k/this.state.speed\n                )\n            }\n\n            //If min_idx changes\n            if (last_min_idx!== min_idx && last_min_idx!==p){\n                setTimeout(\n                    function (last_min_idx){\n                        this.changeColor([last_min_idx], [BASE_COLOR]);\n                    }.bind(this, last_min_idx),\n                    (k+1)/this.state.speed\n                );\n            }\n\n            //If comparison\n            if (!status){\n                setTimeout(\n                    function(last_j, j, min_idx){\n                        if (last_j===min_idx){\n                            this.changeColor([last_j, j], [PIVOT_COLOR, CORRECT_COLOR]);\n                        } else {\n                            this.changeColor([last_j, j], [BASE_COLOR, CORRECT_COLOR]);\n                        }\n                    }.bind(this, last_j, j, min_idx),\n                    (k+1/3)/this.state.speed\n                );\n\n            } else {    //If swapping\n\n                if (p!==min_idx){    // do swap only if useful\n                    setTimeout(\n                        function(p, min_idx){\n                            this.changeColor([p, min_idx], [WRONG_COLOR, WRONG_COLOR]);\n                            this.swapValues(p, min_idx);\n                        }.bind(this, p, min_idx, status),\n                        (k+2/3)/this.state.speed\n                    )\n                }\n            }\n            last_p=p;\n            last_j=j;\n            last_min_idx=min_idx;\n        }\n\n        setTimeout(\n            function(){\n                this.resetColor();\n                this.setState({sorting: false});\n            }.bind(this),\n            animations.length/this.state.speed\n        );\n    }\n\n    handleBubbleSort(){\n        this.setState({sorting: true});\n        this.resetColor();\n\n        var current_array = this.state.array.slice();\n        var animations = get_animations_bubble_sort(current_array);\n        for (var k = 0; k<animations.length; k++){\n            var [i,j,toswap] = animations[k];\n            setTimeout(\n                function (i,j,toswap){\n                    this.changeColor([i,j], toswap ? [WRONG_COLOR,WRONG_COLOR] : [CORRECT_COLOR,CORRECT_COLOR]);\n                }.bind(this, i, j, toswap),\n                k/this.state.speed\n            )\n            if (toswap){\n                setTimeout(\n                    function (i,j){\n                        this.swapValues(i,j)\n                    }.bind(this, i, j), (k+1/3)/this.state.speed\n                )\n            }\n            setTimeout(\n                function (i,j){\n                    this.changeColor([i,j], [BASE_COLOR, BASE_COLOR]);\n                }.bind(this, i, j), (k+2/3)/this.state.speed\n            )\n        }\n\n        setTimeout(\n            function(){\n                this.setState({sorting: false});\n            }.bind(this),\n            animations.length/this.state.speed\n        );\n\n    }\n\n    handleQuickSortHoare(){\n        this.setState({sorting: true});\n        this.resetColor();\n\n        var current_array = this.state.array.slice();\n        var animations = [];\n        [current_array, animations] = quick_sort_hoare(current_array, 0, current_array.length-1, animations);\n        var last_p, last_i, last_j = -1\n        for (var k = 0; k<animations.length; k++){\n            var [p,i,j,toswap] = animations[k];\n            setTimeout(\n                function(p, last_p){\n                    if (p!==last_p){\n                        this.changeColor([last_p, p], [BASE_COLOR,PIVOT_COLOR]);\n                    }\n                }.bind(this, p, last_p),\n                k/this.state.speed\n            )\n            setTimeout(\n                function (current_array, last_i, last_j, i, j, last_p, p, toswap){\n                    if (last_i===last_p && last_p===p){\n                        this.changeColor([last_i, last_j], [PIVOT_COLOR, BASE_COLOR]);\n                    } else if (last_j===last_p && last_p===p){\n                        this.changeColor([last_i, last_j], [BASE_COLOR, PIVOT_COLOR]);\n                    } else {\n                        this.changeColor([last_i, last_j], [BASE_COLOR, BASE_COLOR]);\n                    }\n                    this.changeColor([i,j], (toswap && current_array[i]!==current_array[j]) ? //Hoare quick sort does useless swaps\n                                                                                             // when values are the same, CORRECT_COL wanted\n                                            [WRONG_COLOR,WRONG_COLOR] : [CORRECT_COLOR,CORRECT_COLOR]);\n                }.bind(this, current_array, last_i, last_j, i, j, last_p, p, toswap),\n                k/this.state.speed\n            )\n            if (toswap){\n                setTimeout(\n                    function (i,j){\n                        this.swapValues(i,j)\n                    }.bind(this, i, j), (k+1/2)/this.state.speed\n                )\n            }\n            last_i=i;\n            last_j=j;\n            last_p=p;\n        }\n        setTimeout(\n            function(){\n                this.setState({color : current_array.map(number => 'turquoise')});\n                this.setState({sorting: false});\n            }.bind(this),\n            animations.length/this.state.speed\n        );\n        \n    }\n\n    handleQuickSortLomuto(){\n        this.setState({sorting: true});\n        this.resetColor();\n        \n        var current_array = this.state.array.slice();\n        var animations = [];\n        quick_sort_lomuto(current_array, 0, current_array.length-1, animations);\n        var last_p, last_i, last_j;\n        for (var k=0; k<animations.length;k++){\n            var [p,i,j,toswap] = animations[k];\n\n            setTimeout(\n                function(p, last_p){\n                    if (p!==last_p){\n                        this.changeColor([last_p, p], [BASE_COLOR,PIVOT_COLOR]);\n                    }\n                }.bind(this, p, last_p),\n                k/this.state.speed\n            );\n            \n            if (i!==j){\n                setTimeout(\n                    function(last_i, last_j, i,j,toswap){\n                        if (toswap){\n                            this.changeColor([last_i, last_j, i,j], [BASE_COLOR, BASE_COLOR, CORRECT_COLOR, WRONG_COLOR]);\n                        } else {\n                            this.changeColor([last_i, last_j, i,j], [BASE_COLOR, BASE_COLOR, CORRECT_COLOR, CORRECT_COLOR]);\n                        }\n                    }.bind(this, last_i, last_j, i, j, toswap),\n                    (k+1/3)/this.state.speed\n                );\n    \n                setTimeout(\n                    function(i,j,toswap){\n                        if (toswap){\n                            this.swapValues(i,j);\n                        }\n                    }.bind(this, i, j, toswap),\n                    (k+2/3)/this.state.speed\n                );\n            } else {\n                setTimeout(\n                    function(last_i, last_j, i){\n                        this.changeColor([last_i, last_j, i], [BASE_COLOR, BASE_COLOR, CORRECT_COLOR]);\n                    }.bind(this, last_i, last_j, i),\n                    (k+1/2)/this.state.speed\n                );\n            }\n\n            last_p=p;\n            last_i=i;\n            last_j=j;\n\n        }\n        setTimeout(\n            function(last_i, last_j){\n                this.changeColor([last_i, last_j], [BASE_COLOR, BASE_COLOR]);\n                this.setState({sorting: false});\n            }.bind(this, last_i, last_j),\n            animations.length/this.state.speed\n        );\n\n    }\n\n    handleMergeSort(){\n        this.setState({sorting: true});\n        this.resetColor();\n\n        var current_array = this.state.array.slice();\n        var animations = [];\n        merge_sort(current_array, 0, this.state.array_size-1, animations);\n        for (var k = 0; k<animations.length; k++){\n            var [i,j,toswap] = animations[k];\n            setTimeout(\n                function (i,j,toswap){\n                    this.changeColor([i,j], toswap ? [WRONG_COLOR,WRONG_COLOR] : [CORRECT_COLOR,CORRECT_COLOR]);\n                }.bind(this, i, j, toswap),\n                k/this.state.speed\n            )\n            if (toswap){\n                setTimeout(\n                    function (i,j){\n                        this.changeColor([i,j,i+1], [WRONG_COLOR, BASE_COLOR, WRONG_COLOR]); //Order is important: j could be i+1\n                        this.moveJ2I(i,j);\n                    }.bind(this, i, j), (k+1/3)/this.state.speed\n                )\n            }\n            setTimeout(\n                function (i){\n                    this.changeColor([i,i+1], [BASE_COLOR, BASE_COLOR]);\n                }.bind(this, i), (k+2/3)/this.state.speed\n            )\n        }\n\n        setTimeout(\n            function(){\n                this.setState({sorting: false});\n            }.bind(this),\n            animations.length/this.state.speed\n        );\n    }\n\n    moveJ2I(i, j){\n        var current_array = this.state.array.slice();\n        var tmp = current_array[j];\n        current_array.splice(j, 1);\n        current_array.splice(i, 0, tmp);\n        this.setState({array: current_array});\n    }\n\n    handleStop(){\n        var highestTimeoutId = setTimeout(\";\");\n        for (var i = 0 ; i < highestTimeoutId ; i++) {\n            clearTimeout(i); \n        }\n        this.setState({sorting: false});\n    }\n}","export function merge_sort(arr, start, end, animations){\n    if (end <= start){\n        return arr;\n    } else {\n        var p = Math.floor((start+end)/2) + 1*((start+end)%2!=0);\n        merge_sort(arr, start, p-1, animations);\n        merge_sort(arr, p, end, animations);\n        _merge_lists(arr, start, end, p, animations);\n    }\n    return arr;\n}\n\nfunction _merge_lists(arr, start, end, p, animations){\n    var i = start;\n    var j = p;\n\n    var tmp;\n    while (i<j && j<=end){\n        if (arr[j]<arr[i]){\n            animations.push([i,j,1]);\n            tmp = arr[j];\n            arr.splice(j, 1);\n            arr.splice(i, 0, tmp);\n            i++\n            j++;\n        } else {\n            animations.push([i,j,0]);\n            i++;\n        }\n    }\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}