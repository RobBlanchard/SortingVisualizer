{"version":3,"sources":["SortingVisualizer/Rectangle.jsx","SortingVisualizer/InsertionSort.js","SortingVisualizer/BubbleSort.js","SortingVisualizer/QuickSortHoare.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["Rectangle","style","backgroundColor","this","props","color","width","toString","height","className","value","React","Component","_swap_values","arr","i","j","tmp","quick_sort_hoare","start","end","animations","a","_unique_number","p","Math","floor","p_val","push","_quick_sort_partition","SortingVisualizer","state","array","speed","array_size","handleGeneration","Container","fluid","Navbar","bg","expand","Brand","Nav","Button","onClick","handleInsertionSort","handleBubbleSort","handleQuickSort","Row","Col","formatLabel","step","maxValue","minValue","onChange","handleArraySizeChange","setState","background","map","number","idx","key","round","len","min","max","random","size","idx_arr","current_color","slice","forEach","c","current_array","console","log","last_p","last_min_idx","last_j","length","min_val","min_idx","moving_val","get_animations_insertion_sort","k","status","setTimeout","resetColor","changeColor","bind","swapValues","is_sorted","get_animations_bubble_sort","toswap","last_i","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ef61e40.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default class Rectangle extends React.Component{\n    render() {\n        var style = {backgroundColor : this.props.color,\n            width : this.props.width.toString()+\"%\",\n            height : this.props.height.toString()+\"%\"}\n\n        return (\n            <div className=\"rectangle\" style={style}>\n                {this.props.value}\n            </div>\n        )\n    }\n}","export function get_animations_insertion_sort(arr){\n    var animations=[];\n    for (var i=0; i<arr.length; i++){\n        var fixed_val = arr[i];\n        var min_val = fixed_val;\n        var min_idx = i;        \n        for (var j=i+1; j<=arr.length; j++){\n\n            var moving_val = arr[j];\n            if (moving_val < min_val){\n                min_val = moving_val;\n                min_idx = j;\n                animations.push([i, min_idx, j, 0]);\n            } else {\n                animations.push([i, min_idx, j, 0]);\n            }\n        }\n\n        arr = _swap_values(arr, i , min_idx);\n        animations.push([i, min_idx, min_idx, 1]);\n    }\n    return animations;\n}\n\nfunction _swap_values(arr, i, j){\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n    return arr\n}","export function get_animations_bubble_sort(arr){\n    var animations=[];\n    for (var k=arr.length-1; k>=0; k--){\n        var is_sorted=true;\n        for (var i=0; i<k; i++){\n            if (arr[i]>arr[i+1]){\n                is_sorted=false;\n                _swap_values(arr, i, i+1);\n                animations.push([i,i+1,1])\n            } else {animations.push([i,i+1,0])}\n        }\n        if (is_sorted){break;}\n    }\n    return animations;\n}\n\nfunction _swap_values(arr, i, j){\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n    return arr\n}","export function quick_sort_hoare(arr, start, end, animations){\n    if (_unique_number(arr,start,end)){\n        return [arr, animations];\n    } else {\n        var p;\n        [arr, p] = _quick_sort_partition(arr, start, end, animations);\n        quick_sort_hoare(arr, start, p, animations);\n        quick_sort_hoare(arr, p+1, end, animations);\n        return [arr, animations];\n    }\n}\n\nfunction _quick_sort_partition(arr, start, end, animations){\n    var p = Math.floor((start+end)/2)\n    var p_val = arr[p];\n    var i = start;\n    var j = end;\n    while (true){\n        while (arr[i]<p_val){\n            animations.push([p, i, j, 0]);\n            i++;\n        }\n        while (arr[j]>p_val){\n            animations.push([p, i, j, 0]);\n            j--;\n        }\n        if (i>=j){\n            return [arr, j];\n        }\n\n        arr = _swap_values(arr,i,j);\n\n        //in case p was changed\n        if (p==j){p=i;} else if(p==i){p=j;}\n\n        animations.push([p, i, j, 1]);\n        i++;\n        j--;\n        \n    }\n}\n\nfunction _swap_values(arr, i, j){\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n    return arr\n}\n\nfunction _unique_number(arr, start, end){\n    if (start==end) {return true;}\n    else {\n        var a = arr[start]\n        for (var i=1;i<=end;i++){\n            if (arr[i]!=a){\n                return false;\n            }\n        }\n        return true;\n    }\n}","import React from 'react';\nimport Rectangle from './Rectangle.jsx';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport InputRange from 'react-input-range'\n\nimport {get_animations_insertion_sort} from './InsertionSort.js'\nimport {get_animations_bubble_sort} from './BubbleSort.js'\nimport {quick_sort_hoare} from './QuickSortHoare.js'\n\nimport './SortingVisualizer.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-input-range/lib/css/index.css'\n\nconst ARRAY_MIN=5;\nconst ARRAY_MAX=100;\n\nconst BASE_COLOR=\"turquoise\";\nconst WRONG_COLOR=\"red\";\nconst CORRECT_COLOR=\"green\";\nconst PIVOT_COLOR=\"orange\";\n\nexport default class SortingVisualizer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            array : [],\n            color : [],\n            speed : 0.021,\n            array_size : 10\n        }\n      }\n    \n    componentDidMount() {\n        this.handleGeneration(this.state.array_size, ARRAY_MIN, ARRAY_MAX);\n    }\n\n    render(){\n        return (\n        <Container fluid={true} className=\"fullSizeContainer\">\n            <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand>Sorting Visualizer</Navbar.Brand>\n            <Nav className=\"mx-auto\">\n                <Button className=\"mx-1 text-nowrap\" onClick={() => this.handleGeneration(this.state.array_size, ARRAY_MIN, ARRAY_MAX)}>Generate new array</Button>\n                <Button className=\"mx-1 text-nowrap\" onClick={() => this.handleInsertionSort()}>Insertion Sort</Button>\n                <Button className=\"mx-1 text-nowrap\" onClick={() => this.handleBubbleSort()}>Bubble Sort</Button>\n                <Button className=\"mx-1 text-nowrap\" onClick={() => this.handleQuickSort()}>Quick Sort (Hoare)</Button>\n            </Nav>\n            </Navbar>\n            <Container style={{width: '50vw', height: '10vh' }}>\n                <Row>\n                    <Col>Array Size\n                        <InputRange\n                        formatLabel={value => `${value}`}\n                        step={5}\n                        maxValue={100}\n                        minValue={5}\n                        value={this.state.array_size}\n                        onChange={(array_size) => {this.handleArraySizeChange(array_size);}} />\n                    </Col>\n                    <Col>Speed\n                        <InputRange\n                        formatLabel={value => `${value}`}\n                        step={1}\n                        maxValue={10}\n                        minValue={0}\n                        value={500*this.state.speed-0.5}\n                        onChange={value => this.setState({ speed : (2*value+1)/1000 })} />\n                    </Col>\n                </Row>\n                    \n                    \n                    \n            </Container>\n            <Container className=\"d-flex mx-auto\" style={{ background: '#9e9e9e', width: '80vw', height: '80vh' }}>\n                {this.state.array.map((number,idx) =>\n                        (<Rectangle key={idx} color={this.state.color[idx]} height={Math.round(100*number/ARRAY_MAX)} \n                        width={100/this.state.array_size} value={this.state.array_size<=10 ? number : \"\"}></Rectangle>)\n                )}\n            </Container>                \n\n        </Container>\n            )\n    }\n    \n    handleGeneration(len, min, max) {\n        var array = [];\n        for (var i = 0; i<len; i++){\n            array.push(Math.round(ARRAY_MIN + (ARRAY_MAX-ARRAY_MIN)*Math.random()))\n        }\n        var color = array.map(number => BASE_COLOR);\n        this.setState({array: array, color: color});\n    }\n\n    handleArraySizeChange(size){\n        this.setState({ array_size:size });\n        this.handleGeneration(size, ARRAY_MIN, ARRAY_MAX);\n    }\n\n    changeColor(idx_arr, color){\n        var current_color = this.state.color.slice();\n        idx_arr.forEach(function(idx, c=0){current_color[idx] = color[c++]});\n        this.setState({color: current_color});\n    }\n\n    resetColor(){\n        var current_color = this.state.color.slice();\n        this.setState({color: current_color.map(c => BASE_COLOR)});\n    }\n\n    swapValues(i, j){\n        var current_array = this.state.array.slice();\n        var tmp = current_array[i];\n        current_array[i] = current_array[j];\n        current_array[j] = tmp;\n        this.setState({array: current_array});\n    }\n\n    handleInsertionSort(){\n        console.log(this.state.speed);\n        var current_array = this.state.array.slice();\n        var animations = get_animations_insertion_sort(current_array);\n        var last_p, last_min_idx, last_j;\n\n        for (var k = 0; k<animations.length; k++){\n            var [p, min_idx, j, status] = animations[k];\n\n            //If pivot changes\n            if (p!=last_p){\n                setTimeout(\n                    function (p, last_p){\n                        this.resetColor();\n                        this.changeColor([p, last_p], [PIVOT_COLOR, BASE_COLOR]);\n                    }.bind(this, p, last_p),\n                    k/this.state.speed\n                )\n            }\n\n            //If min_idx changes\n            if (last_min_idx!= min_idx && last_min_idx!=p){\n                setTimeout(\n                    function (last_min_idx){\n                        this.changeColor([last_min_idx], [BASE_COLOR]);\n                    }.bind(this, last_min_idx),\n                    (k+1)/this.state.speed\n                );\n            }\n\n            //If comparison\n            if (!status){\n                setTimeout(\n                    function(last_j, j, min_idx){\n                        if (last_j==min_idx){\n                            this.changeColor([last_j, j], [PIVOT_COLOR, CORRECT_COLOR]);\n                        } else {\n                            this.changeColor([last_j, j], [BASE_COLOR, CORRECT_COLOR]);\n                        }\n                    }.bind(this, last_j, j, min_idx),\n                    (k+1/3)/this.state.speed\n                );\n\n            } else {    //If swapping\n\n                if (p!=min_idx){    // do swap only if useful\n                    setTimeout(\n                        function(p, min_idx){\n                            this.changeColor([p, min_idx], [WRONG_COLOR, WRONG_COLOR]);\n                            this.swapValues(p, min_idx);\n                        }.bind(this, p, min_idx, status),\n                        (k+2/3)/this.state.speed\n                    )\n                }\n            }\n            last_p=p;\n            last_j=j;\n            last_min_idx=min_idx;\n        }\n\n        setTimeout(\n            function(){\n                this.resetColor()\n            }.bind(this),\n            animations.length/this.state.speed\n        );\n\n    }\n\n    handleBubbleSort(){\n        var current_array = this.state.array.slice();\n        var animations = get_animations_bubble_sort(current_array);\n        for (var k = 0; k<animations.length; k++){\n            var [i,j,toswap] = animations[k];\n            setTimeout(\n                function (i,j,toswap){\n                    this.changeColor([i,j], toswap ? [WRONG_COLOR,WRONG_COLOR] : [CORRECT_COLOR,CORRECT_COLOR]);\n                }.bind(this, i, j, toswap),\n                k/this.state.speed\n            )\n            if (toswap){\n                setTimeout(\n                    function (i,j){\n                        this.swapValues(i,j)\n                    }.bind(this, i, j), (k+1/3)/this.state.speed\n                )\n            }\n            setTimeout(\n                function (i,j){\n                    this.changeColor([i,j], [BASE_COLOR, BASE_COLOR]);\n                }.bind(this, i, j), (k+2/3)/this.state.speed\n            )\n        }\n    }\n\n    handleQuickSort(){\n        var current_array = this.state.array.slice();\n        var animations = [];\n        [current_array, animations] = quick_sort_hoare(current_array, 0, current_array.length-1, animations);\n        var last_p, last_i, last_j = -1\n        for (var k = 0; k<animations.length; k++){\n            var [p,i,j,toswap] = animations[k];\n            setTimeout(\n                function(p, last_p){\n                    if (p!=last_p){\n                        this.changeColor([last_p, p], [BASE_COLOR,PIVOT_COLOR]);\n                    }\n                }.bind(this, p, last_p),\n                k/this.state.speed\n            )\n            setTimeout(\n                function (current_array, last_i, last_j, i, j, last_p, p, toswap){\n                    if (last_i==last_p && last_p==p){\n                        this.changeColor([last_i, last_j], [PIVOT_COLOR, BASE_COLOR]);\n                    } else if (last_j==last_p && last_p==p){\n                        this.changeColor([last_i, last_j], [BASE_COLOR, PIVOT_COLOR]);\n                    } else {\n                        this.changeColor([last_i, last_j], [BASE_COLOR, BASE_COLOR]);\n                    }\n                    this.changeColor([i,j], (toswap && current_array[i]!=current_array[j]) ? //Hoare quick sort does useless swaps\n                                                                                             // when values are the same, CORRECT_COL wanted\n                                            [WRONG_COLOR,WRONG_COLOR] : [CORRECT_COLOR,CORRECT_COLOR]);\n                }.bind(this, current_array, last_i, last_j, i, j, last_p, p, toswap),\n                k/this.state.speed\n            )\n            if (toswap){\n                setTimeout(\n                    function (i,j){\n                        this.swapValues(i,j)\n                    }.bind(this, i, j), (k+1/2)/this.state.speed\n                )\n            }\n            last_i=i;\n            last_j=j;\n            last_p=p;\n        }\n        setTimeout(\n            function(){\n                this.setState({color : current_array.map(number => 'turquoise')});\n            }.bind(this),\n            animations.length/this.state.speed\n        );\n        \n    }\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}